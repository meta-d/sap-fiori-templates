@use 'sass:map';
@use 'sass:color';
@use '@angular/material' as mat;
@use '@metad/ocap-angular/theming' as ocap;
@import './themes/base';

// Define a theme.
$primary: mat.define-palette(mat.$blue-palette, 500);
$accent: mat.define-palette(mat.$amber-palette, A700, A400, A200);

$light-secondary-text: rgba(white, 0.7);
$light-disabled-text: rgba(white, 0.5);
$light-dividers: rgba(white, 0.12);
$grey-palette: mat.$blue-grey-palette;

$background: (
  status-bar: #151a30,
  app-bar:    theme('colors.neutral.900'),
  background: black,
  hover:      rgba(white, 0.1), // TODO(kara): check style with Material Design UX
  card:       rgb(22, 24, 28),
  dialog:     rgb(22, 24, 28),
  disabled-button: rgba(white, 0.12),
  raised-button: map.get($grey-palette, 800),
  // focused-button: $light-focused,
  selected-button: map.get($grey-palette, 900),
  selected-disabled-button: map.get($grey-palette, 800),
  disabled-button-toggle: black,
  unselected-chip: map.get($grey-palette, 700),
  disabled-list-option: black,
  tooltip: theme('colors.neutral.700'),
);
$foreground: (
  base:              white,
  divider:           $light-dividers,
  dividers:          $light-dividers,
  disabled:          $light-disabled-text,
  disabled-button:   rgba(white, 0.3),
  disabled-text:     $light-disabled-text,
  elevation:         black,
  hint-text:         $light-disabled-text,
  secondary-text:    $light-secondary-text,
  icon:              white,
  icons:             white,
  text:              theme('colors.neutral.200'),
  slider-min:        white,
  slider-off:        rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3),
);
$mat-theme: map.deep-merge(
    mat.define-dark-theme((
      color: (
        primary: $primary,
        accent: $accent,
      )
    )),
    (
      color: (
        background: $background,
        foreground: $foreground
      )
    )
  );


html.dark {
  --ngm-color-primary: #{mat.get-color-from-palette($primary)};
  --ngm-color-on-primary-container: #{darken(mat.get-color-from-palette($primary), 30%)};
  --ngm-color-primary-container: #{lighten(mat.get-color-from-palette($primary), 30%)};
  --ngm-color-primary-container-variant: #{color.change(mat.get-color-from-palette($primary), $alpha: 0.1)};
  --ngm-color-secondary: #{mat.get-color-from-palette($accent)};
  --ngm-color-secondary-container: #{lighten(mat.get-color-from-palette($accent), 30%)};
  --ngm-color-outline: #{map.get($foreground, divider)};

  --ngm-app-background-color: #1e1f20;
  --ngm-color-main-container-background: #1e1f20;
  --ngm-color-on-surface: #e3e3e3;
  --ngm-color-on-surface-variant: #444746;
  --ngm-divider-color-secondary: theme('colors.neutral.900');
  --ngm-color-surface: black;
  --ngm-color-surface-container-low: #62626210;
  --ngm-color-surface-container: #16181c;
  --ngm-color-surface-container-high: #24292f;
  --ngm-color-surface-container-highest: #2f353c;
  --ngm-color-outline-variant: theme('colors.neutral.800');
  --ngm-copilot-bg-color: var(--ngm-color-surface-container);

  @include mat.all-component-themes($mat-theme);

  @include ocap.core-theme($mat-theme);
  @include ocap.analytical-grid-theme($mat-theme);
  @include ocap.breadcrumb-theme($mat-theme);
  @include ocap.controls-theme($mat-theme);
  @include ocap.entity-theme($mat-theme);
  @include ocap.common-color($mat-theme);
  @include ocap.common-density($mat-theme);
}